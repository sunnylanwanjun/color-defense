{"version":3,"sources":["../../../../../assets/scripts/data/assets/scripts/data/PassData.js"],"names":["cc","Class","ctor","init","GameDataClass","passAll","resMgr","getRes","resName","passTpl","curPassData","changePass","passIdx","log","passArr","initCurPassData","newPass","utils","clone","perPassTpl","idx","getPassCount","push","globalEvent","emit","initConfigData","userData","savePass","length","getCurPassData","getCurPassIdx"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,QADK,kBACC,CAEL,CAHI;AAILC,QAJK,gBAIAC,aAJA,EAIc;AACf,aAAKC,OAAL,GAAeL,GAAGM,MAAH,CAAUC,MAAV,CAAiBP,GAAGQ,OAAH,CAAWH,OAA5B,CAAf;AACA,aAAKI,OAAL,GAAeT,GAAGM,MAAH,CAAUC,MAAV,CAAiBP,GAAGQ,OAAH,CAAWC,OAA5B,CAAf;AACA,aAAKC,WAAL,GAAmB,IAAIN,aAAJ,EAAnB;AACH,KARI;AASLO,cATK,sBASMC,OATN,EASc;AACfZ,WAAGa,GAAH,CAAO,qBAAP,EAA6BD,OAA7B;AACA,YAAG,KAAKP,OAAL,CAAaS,OAAb,CAAqBF,OAArB,CAAH,EAAiC;AAC7B,iBAAKG,eAAL,CAAqBH,OAArB;AACH,SAFD,MAEK;AACD,gBAAII,UAAUhB,GAAGiB,KAAH,CAASC,KAAT,CAAe,KAAKT,OAAL,CAAaU,UAA5B,CAAd;AACAH,oBAAQI,GAAR,GAAc,KAAKC,YAAL,EAAd;AACA,iBAAKhB,OAAL,CAAaS,OAAb,CAAqBQ,IAArB,CAA0BN,OAA1B;AACA,iBAAKD,eAAL,CAAqBH,OAArB;AACH;AACDZ,WAAGuB,WAAH,CAAeC,IAAf,CAAoB,qBAApB,EAA0CZ,OAA1C;AACH,KApBI;AAqBLG,mBArBK,2BAqBWH,OArBX,EAqBmB;AACpB,aAAKF,WAAL,CAAiBe,cAAjB,CAAgCb,OAAhC;AACAZ,WAAG0B,QAAH,CAAYC,QAAZ,CAAqBf,OAArB;AACH,KAxBI;AAyBLS,gBAzBK,0BAyBS;AACV,eAAO,KAAKhB,OAAL,CAAaS,OAAb,CAAqBc,MAA5B;AACH,KA3BI;AA4BLC,kBA5BK,4BA4BW;AACZ,eAAO,KAAKnB,WAAZ;AACH,KA9BI;AA+BLoB,iBA/BK,2BA+BU;AACX,eAAO,KAAKpB,WAAL,CAAiBE,OAAxB;AACH;AAjCI,CAAT","file":"PassData.js","sourceRoot":"../../../../../assets/scripts/data","sourcesContent":["cc.Class({\n    ctor(){\n        \n    },\n    init(GameDataClass){\n        this.passAll = cc.resMgr.getRes(cc.resName.passAll);\n        this.passTpl = cc.resMgr.getRes(cc.resName.passTpl);\n        this.curPassData = new GameDataClass();\n    },\n    changePass(passIdx){\n        cc.log(\"PassData:changePass\",passIdx);\n        if(this.passAll.passArr[passIdx]){\n            this.initCurPassData(passIdx);\n        }else{\n            var newPass = cc.utils.clone(this.passTpl.perPassTpl);\n            newPass.idx = this.getPassCount();\n            this.passAll.passArr.push(newPass);\n            this.initCurPassData(passIdx);\n        }\n        cc.globalEvent.emit(\"PassData:changePass\",passIdx);\n    },\n    initCurPassData(passIdx){\n        this.curPassData.initConfigData(passIdx);\n        cc.userData.savePass(passIdx);\n    },\n    getPassCount(){\n        return this.passAll.passArr.length;\n    },\n    getCurPassData(){\n        return this.curPassData;\n    },\n    getCurPassIdx(){\n        return this.curPassData.passIdx;\n    },\n});"]}