{"version":3,"sources":["../../../../../assets/scripts/component/assets/scripts/component/OperateTower.js"],"names":["cc","Class","extends","Component","properties","operateToggle","default","undefined","type","ToggleContainer","gameRoot","require","ctor","CC_EDITOR","globalEvent","on","operateTower","updateResult","curPassData","passData","getCurPassData","onLoad","onDestroy","off","node","active","gameResult","event","isMouseMove","detail","entityTower","onDisable","yesOperate","toggle","utils","getToggleCheckNode","name","hasNextLevel","tip","cost","propValue","uplevelCost","gameData","gold","changeGold","setState","entityState","upleveling","destroying","noOperate"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAAQF,GAAGG,SADN;AAELC,gBAAW;AACPC,uBAAc;AACVC,qBAAQC,SADE;AAEVC,kBAAKR,GAAGS;AAFE,SADP;AAKPC,kBAAS;AACLJ,qBAAQC,SADH;AAELC,kBAAKG,QAAQ,UAAR;AAFA;AALF,KAFN;AAYLC,QAZK,kBAYC;AACF,YAAG,CAACC,SAAJ,EAAc;AACVb,eAAGc,WAAH,CAAeC,EAAf,CAAkB,mBAAlB,EAAsC,KAAKC,YAA3C,EAAwD,IAAxD;AACAhB,eAAGc,WAAH,CAAeC,EAAf,CAAkB,sBAAlB,EAAyC,KAAKE,YAA9C,EAA2D,IAA3D;AACA,iBAAKC,WAAL,GAAmBlB,GAAGmB,QAAH,CAAYC,cAAZ,EAAnB;AACH;AACJ,KAlBI;AAmBLC,UAnBK,oBAmBG,CAEP,CArBI;AAsBLC,aAtBK,uBAsBM;AACPtB,WAAGc,WAAH,CAAeS,GAAf,CAAmB,mBAAnB,EAAuC,KAAKP,YAA5C,EAAyD,IAAzD,EAA+DhB,GAAGc,WAAH,CAAeS,GAAf,CAAmB,sBAAnB,EAA0C,KAAKN,YAA/C,EAA4D,IAA5D;AAClE,KAxBI;AAyBLA,gBAzBK,0BAyBS;AACV,aAAKO,IAAL,CAAUC,MAAV,GAAoB,KAAKP,WAAL,CAAiBQ,UAAjB,IAA+BnB,SAAnD;AACH,KA3BI;AA4BLS,gBA5BK,wBA4BQW,KA5BR,EA4Bc;AACf,YAAG,KAAKjB,QAAL,CAAckB,WAAjB,EAA6B;AAC7B,aAAKJ,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,YAAII,SAASF,MAAME,MAAnB;AACA,aAAKC,WAAL,GAAmBD,MAAnB;AACH,KAjCI;AAkCLE,aAlCK,uBAkCM;AACP,aAAKD,WAAL,GAAmBvB,SAAnB;AACH,KApCI;AAqCLyB,cArCK,wBAqCO;AACR,YAAIC,SAASjC,GAAGkC,KAAH,CAASC,kBAAT,CAA4B,KAAK9B,aAAjC,CAAb;AACA,YAAG4B,MAAH,EAAU;AACN,oBAAOA,OAAOG,IAAd;AACI,qBAAK,SAAL;AACA,wBAAG,CAAC,KAAKN,WAAL,CAAiBO,YAAjB,EAAJ,EAAoC;AAChCrC,2BAAGkC,KAAH,CAASI,GAAT,CAAa,wBAAb;AACA;AACH;AACD,wBAAIC,OAAO,KAAKT,WAAL,CAAiBU,SAAjB,CAA2BC,WAAtC;AACA,wBAAI,CAACF,IAAD,GAAQ,KAAKrB,WAAL,CAAiBwB,QAAjB,CAA0BC,IAAtC,EAA4C;AACxC3C,2BAAGkC,KAAH,CAASI,GAAT,CAAa,oBAAb;AACA;AACH;AACD,yBAAKpB,WAAL,CAAiB0B,UAAjB,CAA4BL,IAA5B;AACA,yBAAKT,WAAL,CAAiBe,QAAjB,CAA0B7C,GAAG8C,WAAH,CAAeC,UAAzC;AACA;AACA,qBAAK,cAAL;AACA,yBAAKjB,WAAL,CAAiBe,QAAjB,CAA0B7C,GAAG8C,WAAH,CAAeE,UAAzC;AACA;AAhBJ;AAkBH,SAnBD,MAmBK;AACDhD,eAAGkC,KAAH,CAASI,GAAT,CAAa,4BAAb;AACA;AACH;AACD,aAAKd,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KA/DI;AAgELwB,aAhEK,uBAgEM;AACP,aAAKzB,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;AAlEI,CAAT","file":"OperateTower.js","sourceRoot":"../../../../../assets/scripts/component","sourcesContent":["cc.Class({\n    extends:cc.Component,\n    properties:{\n        operateToggle:{\n            default:undefined,\n            type:cc.ToggleContainer,\n        },\n        gameRoot:{\n            default:undefined,\n            type:require(\"GameRoot\"),\n        }\n    },\n    ctor(){\n        if(!CC_EDITOR){\n            cc.globalEvent.on(\"Game:operateTower\",this.operateTower,this);\n            cc.globalEvent.on(\"CurData:updateResult\",this.updateResult,this);\n            this.curPassData = cc.passData.getCurPassData();\n        }\n    },\n    onLoad(){\n        \n    },\n    onDestroy(){\n        cc.globalEvent.off(\"Game:operateTower\",this.operateTower,this);cc.globalEvent.off(\"CurData:updateResult\",this.updateResult,this);\n    },\n    updateResult(){\n        this.node.active = (this.curPassData.gameResult == undefined);\n    },\n    operateTower(event){\n        if(this.gameRoot.isMouseMove)return;\n        this.node.active = true;\n        var detail = event.detail;\n        this.entityTower = detail;\n    },\n    onDisable(){\n        this.entityTower = undefined;\n    },\n    yesOperate(){\n        var toggle = cc.utils.getToggleCheckNode(this.operateToggle);\n        if(toggle){\n            switch(toggle.name){\n                case \"UpLevel\":\n                if(!this.entityTower.hasNextLevel()){\n                    cc.utils.tip(\"the tower is top level\");\n                    return;\n                }\n                var cost = this.entityTower.propValue.uplevelCost;\n                if( -cost > this.curPassData.gameData.gold ){\n                    cc.utils.tip(\"gold is not enough\");\n                    return;\n                }\n                this.curPassData.changeGold(cost);\n                this.entityTower.setState(cc.entityState.upleveling);\n                break;\n                case \"DestroyTower\":\n                this.entityTower.setState(cc.entityState.destroying);\n                break;\n            }\n        }else{\n            cc.utils.tip(\"please select a tower type\");\n            return;\n        }\n        this.node.active = false;\n    },\n    noOperate(){\n        this.node.active = false;\n    },\n})"]}