{"version":3,"sources":["../../../../../../assets/scripts/node/entity/assets/scripts/node/entity/MonsterMgr.js"],"names":["cc","Class","ctor","_initMgr","initMonsterMgr","curPassData","passData","getCurPassData","bornArr","configData","roadMap","bornDataArr","i","length","waveIdx","monsterNum","goTime","routeOrder","state","unInitMonsterMgr","logicUpdate","dt","bornData","bornConfig","allWaveMonsterArr","waveMonster","isTimeEnough","waitTime","refreshTime","entity","entityMgr","createEntity","x","y","monsterIdx","setCamp","camp","roadIdx","allRoadArr","setRoad","splice","getMonsterNum","setGameResult"],"mappings":"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","file":"MonsterMgr.js","sourceRoot":"../../../../../../assets/scripts/node/entity","sourcesContent":["cc.Class({\n    ctor(){\n        this._initMgr = false;\n    },\n    initMonsterMgr(){\n        this._initMgr = true;\n        this.curPassData = cc.passData.getCurPassData();\n        this.bornArr = this.curPassData.configData.bornArr;\n        this.roadMap = this.curPassData.configData.roadMap;\n        this.bornDataArr = [];\n        for(var i=this.bornArr.length-1;i>=0;i--){\n            this.bornDataArr[i] = {\n                waveIdx:0,\n                monsterNum:0,\n                goTime:0,\n                routeOrder:0,\n                state:\"waiting\"\n            };\n        }\n    },\n    unInitMonsterMgr(){\n        this._initMgr = false;\n    },\n    logicUpdate(dt){\n        if(!this._initMgr)return;\n        for(var i=this.bornDataArr.length-1;i>=0;i--){\n            var bornData = this.bornDataArr[i];\n            var bornConfig = this.bornArr[i];\n\n            var allWaveMonsterArr = bornConfig.allWaveMonsterArr;\n            var waveMonster = allWaveMonsterArr[bornData.waveIdx];\n            var isTimeEnough = false;\n\n            bornData.goTime+=dt;\n            if(bornData.state == \"waiting\"){\n                if(bornData.goTime>waveMonster.waitTime){\n                    isTimeEnough = true;\n                }\n            }else{\n                if(bornData.goTime>waveMonster.refreshTime){\n                    isTimeEnough = true;\n                }\n            }\n\n            if(isTimeEnough){\n                var entity = cc.entityMgr.createEntity(\"EntityMonster\",\n                    bornConfig.x,\n                    bornConfig.y,\n                    waveMonster.monsterIdx\n                );\n                entity.setCamp(bornConfig.camp);\n                var roadIdx = bornConfig.allRoadArr[bornData.routeOrder];\n                entity.setRoad(this.roadMap[roadIdx]);\n\n                bornData.monsterNum++;\n                bornData.state = \"refreshing\";\n                bornData.goTime = 0;\n                bornData.routeOrder ++;\n\n                if(bornData.routeOrder>=bornConfig.allRoadArr.length){\n                    bornData.routeOrder = 0;\n                }\n                if(bornData.monsterNum>=waveMonster.monsterNum){\n                    bornData.monsterNum = 0;\n                    bornData.state = \"waiting\";\n                    bornData.waveIdx++;\n                }\n                if(bornData.waveIdx>=allWaveMonsterArr.length){\n                    this.bornDataArr.splice(i,1);\n                }\n            }\n        }\n\n        if(this.bornDataArr.length == 0){\n            var monsterNum = cc.entityMgr.getMonsterNum();\n            if(monsterNum==0){\n                this.curPassData.setGameResult(\"win\");\n            }\n        }\n    },\n});"]}