{"version":3,"sources":["../../../../../../assets/scripts/node/entity/assets/scripts/node/entity/EntityTarget.js"],"names":["cc","Class","extends","require","ctor","group","baseNode","Node","parent","PoolMgr","poolMgr","setBuildFunc","skinType","skinInfo","skinNode","skinMgr","getSkin","setCompleteCallback","push","bind","setResetFunc","active","labelNode","color","addChild","label","addComponent","Label","initGameData","_super","initEntity","idx","targetIdx","curPassData","passData","getCurPassData","globalEvent","on","updateHp","myType","myIdx","myProperty","myPropertyArr","split","updateProperty","unInitEntity","off","event","detail","camp","undefined","propValue","passGameData","gameData","campMap","string","property","resetAll","key","rowValue","targetSkinArr","get","name","updateInfo","keyHandle","keyCode","KEY","Delete","editData","deleteTarget","_onCollisionEnter","other","self","otherNode","node","otherHarmHp","harm","changeCampHp","entityMgr","clearEntity"],"mappings":"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","file":"EntityTarget.js","sourceRoot":"../../../../../../assets/scripts/node/entity","sourcesContent":["cc.Class({\n    extends:require(\"EntityBase\"),\n    ctor(){\n        this.group = \"target\";\n\n        this.baseNode = new cc.Node();\n        this.baseNode.parent = this;\n\n        var PoolMgr = require(\"PoolMgr\");\n        this.poolMgr = new PoolMgr;\n        this.poolMgr.setBuildFunc(function(skinType,skinInfo){\n            var skinNode = cc.skinMgr.getSkin(skinInfo);\n            skinNode.setCompleteCallback(function(){\n                this.poolMgr.push(skinType,skinNode);\n            }.bind(this));\n            skinNode.parent = this.baseNode;\n            return skinNode;\n        }.bind(this));\n        this.poolMgr.setResetFunc(function(skinType,skinNode){\n            skinNode.active = false;\n        }.bind(this));\n\n        var labelNode = new cc.Node();\n        labelNode.color = cc.color(255.0,0);\n        this.addChild(labelNode);\n        this.label = labelNode.addComponent(cc.Label);\n    },\n    initGameData(){\n        this._super();\n    },\n    initEntity(idx,targetIdx){\n        this._super();\n        this.curPassData = cc.passData.getCurPassData();\n\n        cc.globalEvent.on(\"CurData:initGameData\",this.updateHp,this);\n        cc.globalEvent.on(\"CurData:changeCampHp\",this.updateHp,this);\n        this.myType = \"pass\";\n        this.myIdx = idx;\n        this.targetIdx = targetIdx;\n        this.myProperty = \"targetArr@\"+targetIdx;\n        this.myPropertyArr = this.myProperty.split(\"@\");\n        this.updateProperty();\n    },\n    unInitEntity(){\n        this._super();\n        cc.globalEvent.off(\"CurData:initGameData\",this.updateHp,this);\n        cc.globalEvent.off(\"CurData:changeCampHp\",this.updateHp,this);\n    },\n    updateHp(event){\n        if(event&&event.detail){\n            var detail = event.detail;\n            if(detail.camp!=undefined&&\n               detail.camp!=this.propValue.camp){\n                return;\n            }\n        }\n        var passGameData = this.curPassData.gameData;\n        var campMap = passGameData.campMap;\n        this.label.string = campMap[this.propValue.camp];\n    },\n    updateProperty(property){\n        if(!this._super(property)){\n            return false;\n        }\n\n        this.poolMgr.resetAll();\n        for(var key in this.rowValue.targetSkinArr){\n            var skinInfo = this.rowValue.targetSkinArr[key];\n            var skinNode = this.poolMgr.get(skinInfo.name,skinInfo);\n            skinNode.active = true;\n            skinNode.updateInfo(skinInfo);\n        }\n\n        this.updateHp();\n        return true;\n    },\n    keyHandle(keyCode){\n        switch(keyCode) {\n            case cc.KEY.Delete:\n                cc.editData.deleteTarget(this.myIdx,this.targetIdx);\n                break;\n        }\n    },\n    _onCollisionEnter(other,self){\n        var otherNode = other.node;\n        if(otherNode.gameData.camp == this.propValue.camp)return;\n        var otherHarmHp = otherNode.propValue.harm;\n        this.curPassData.changeCampHp(this.propValue.camp,otherHarmHp);\n        cc.entityMgr.clearEntity(otherNode);\n    },\n})"]}