{"version":3,"sources":["../../../../assets/scripts/assets/scripts/MyTimer.js"],"names":["cc","Class","ctor","__instanceId","ClassManager","getNewInstanceId","timerHandle","timerIdx","timerTypeRecord","once","func","delay","timerType","args","loop","times","log","curTimerIdx","callTimes","callback","removeByIdx","macro","REPEAT_FOREVER","director","getScheduler","schedule","callbackInfo","unschedule","removeByType","tmp","push","key"],"mappings":";;;;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,QADK,kBACC;AACF,aAAKC,YAAL,GAAoBH,GAAGI,YAAH,CAAgBC,gBAAhB,EAApB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,eAAL,GAAuB,EAAvB;AACH,KANI;AAOLC,QAPK,gBAOAC,IAPA,EAOKC,KAPL,EAOWC,SAPX,EAO6B;AAAA,0CAALC,IAAK;AAALA,gBAAK;AAAA;;AAC9B,eAAO,KAAKC,IAAL,cAAUJ,IAAV,EAAeC,KAAf,EAAqB,CAArB,EAAuBC,SAAvB,4BAAoCC,IAApC,GAAP;AACH,KATI;AAULC,QAVK,gBAUAJ,IAVA,EAUKC,KAVL,EAUWI,KAVX,EAUiBH,SAVjB,EAUmC;AAAA,2CAALC,IAAK;AAALA,gBAAK;AAAA;;AACpC,YAAG,CAACH,IAAJ,EAAS;AACLV,eAAGgB,GAAH,CAAO,yBAAP;AACA;AACH;;AAED,YAAIC,cAAc,KAAKV,QAAL,EAAlB;AACA,YAAIW,YAAY,CAAhB;AACA,YAAIC,WAAW,SAAXA,QAAW,GAAU;AACrBD;AACA,gBAAGA,aAAaH,KAAhB,EAAsB;AAClB,qBAAKK,WAAL,CAAiBH,WAAjB,EAA6BL,SAA7B;AACH;AACDF,qDAAQG,IAAR;AACH,SAND;;AAQA,YAAGD,SAAH,EAAa;AACT,iBAAKJ,eAAL,CAAqBI,SAArB,IAAkC,KAAKJ,eAAL,CAAqBI,SAArB,KAAmC,EAArE;AACA,iBAAKJ,eAAL,CAAqBI,SAArB,EAAgCK,WAAhC,IAA+C,IAA/C;AACH;AACD,aAAKX,WAAL,CAAiBW,WAAjB,IAAgC,EAACE,UAASA,QAAV,EAAhC;AACA,YAAG,CAACJ,KAAJ,EAAU;AACNA,oBAAQf,GAAGqB,KAAH,CAASC,cAAjB;AACH;AACDtB,WAAGuB,QAAH,CAAYC,YAAZ,GAA2BC,QAA3B,CAAoCN,QAApC,EAA8C,IAA9C,EAAoDR,KAApD,EAA2DI,KAA3D,EAAkEJ,KAAlE,EAAyE,KAAzE;AACA,eAAOM,WAAP;AACH,KApCI;AAqCLG,eArCK,uBAqCOb,QArCP,EAqCgBK,SArChB,EAqC0B;AAC3B,YAAGA,aAAW,KAAKJ,eAAL,CAAqBI,SAArB,CAAd,EAA8C;AAC1C,mBAAO,KAAKJ,eAAL,CAAqBI,SAArB,EAAgCL,QAAhC,CAAP;AACH;AACD,YAAG,CAACA,QAAJ,EAAa;AACb,YAAImB,eAAe,KAAKpB,WAAL,CAAiBC,QAAjB,CAAnB;AACA,YAAG,CAACmB,YAAJ,EAAiB;AACjB1B,WAAGuB,QAAH,CAAYC,YAAZ,GAA2BG,UAA3B,CAAsCD,aAAaP,QAAnD,EAA4D,IAA5D;AACA,eAAO,KAAKb,WAAL,CAAiBC,QAAjB,CAAP;AACH,KA9CI;AA+CLqB,gBA/CK,wBA+CQhB,SA/CR,EA+CkB;AACnB,YAAIiB,MAAM,EAAV;AACA,YAAIrB,kBAAkB,KAAKA,eAAL,CAAqBI,SAArB,CAAtB;AACA,aAAI,IAAIL,QAAR,IAAoBC,eAApB,EAAoC;AAChC,gBAAGA,gBAAgBD,QAAhB,CAAH,EAA6B;AACzBsB,oBAAIC,IAAJ,CAASvB,QAAT;AACH;AACJ;AACD,aAAI,IAAIwB,GAAR,IAAeF,GAAf,EAAmB;AACf,gBAAGA,IAAIE,GAAJ,CAAH,EAAY;AACR,qBAAKX,WAAL,CAAiBS,IAAIE,GAAJ,CAAjB,EAA0BnB,SAA1B;AACH;AACJ;AACD,eAAO,KAAKJ,eAAL,CAAqBI,SAArB,CAAP;AACH;AA7DI,CAAT","file":"MyTimer.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    ctor(){\n        this.__instanceId = cc.ClassManager.getNewInstanceId();\n        this.timerHandle = {};\n        this.timerIdx = 1;\n        this.timerTypeRecord = {};\n    },\n    once(func,delay,timerType,...args){\n        return this.loop(func,delay,1,timerType,...args);\n    },\n    loop(func,delay,times,timerType,...args){\n        if(!func){\n            cc.log(\"Timer:loop func is null\");\n            return;\n        }\n\n        var curTimerIdx = this.timerIdx++;\n        var callTimes = 0;\n        var callback = function(){\n            callTimes++;\n            if(callTimes >= times){\n                this.removeByIdx(curTimerIdx,timerType);\n            }\n            func(...args);\n        }\n\n        if(timerType){\n            this.timerTypeRecord[timerType] = this.timerTypeRecord[timerType] || {};\n            this.timerTypeRecord[timerType][curTimerIdx] = true;\n        }\n        this.timerHandle[curTimerIdx] = {callback:callback};\n        if(!times){\n            times = cc.macro.REPEAT_FOREVER;\n        }\n        cc.director.getScheduler().schedule(callback, this, delay, times, delay, false);\n        return curTimerIdx;\n    },\n    removeByIdx(timerIdx,timerType){\n        if(timerType&&this.timerTypeRecord[timerType]){\n            delete this.timerTypeRecord[timerType][timerIdx];\n        }\n        if(!timerIdx)return;\n        var callbackInfo = this.timerHandle[timerIdx];\n        if(!callbackInfo)return;\n        cc.director.getScheduler().unschedule(callbackInfo.callback,this);\n        delete this.timerHandle[timerIdx];\n    },\n    removeByType(timerType){\n        var tmp = [];\n        var timerTypeRecord = this.timerTypeRecord[timerType];\n        for(var timerIdx in timerTypeRecord){\n            if(timerTypeRecord[timerIdx]){\n                tmp.push(timerIdx);\n            }\n        }\n        for(var key in tmp){\n            if(tmp[key]){\n                this.removeByIdx(tmp[key],timerType);\n            }\n        }\n        delete this.timerTypeRecord[timerType];\n    }\n})"]}