{"version":3,"sources":["../../../../../../../assets/scripts/node/entity/tower/assets/scripts/node/entity/tower/TowerBase.js"],"names":["cc","Class","extends","require","ctor","skinZIndex","muzzleZIndex","bulletZIndex","stateZIndex","PoolMgr","baseNode","Node","parent","setContentSize","size","poolMgr","setBuildFunc","type","skinInfo","skinNode","skinMgr","getSkin","zIndex","bind","setResetFunc","active","muzzleSkinNode","muzzlePoolMgr","stateNode","stateLabel","addComponent","Label","string","touchendTower","event","globalEvent","emit","touchstartTower","initGameData","_super","gameData","operateTime","operateTotalTime","showMuzzle","value","canWork","state","entityState","working","toWork","enableCollider","unWork","logicUpdate","dt","txt","Math","floor","building","setState","destroying","entityMgr","clearEntity","createEntity","x","y","placeFloorIdx","upleveling","entityType","propValue","nextLevelIdx","hasNextLevel","undefined","buildTime","destroyTime","utils","tip","uplevelTime","preState","initEntity","idx","floorIdx","resMgr","curSceneName","on","myType","myIdx","updateProperty","level","unInitEntity","off","_onPreDestroy","property","resetAll","key","skinArr","get","name","updateInfo","muzzleSkinArr"],"mappings":"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","file":"TowerBase.js","sourceRoot":"../../../../../../../assets/scripts/node/entity/tower","sourcesContent":["cc.Class({\n    extends:require(\"EntityBase\"),\n    ctor(){\n        this.skinZIndex = 1;\n        this.muzzleZIndex = 10;\n        this.bulletZIndex = 20;\n        this.stateZIndex = 30;\n\n        var PoolMgr = require(\"PoolMgr\");\n        this.baseNode = new cc.Node();\n        this.baseNode.parent = this;\n        this.baseNode.setContentSize(cc.size(100,100));\n\n        this.poolMgr = new PoolMgr;\n        this.poolMgr.setBuildFunc(function(type,skinInfo){\n            var skinNode = cc.skinMgr.getSkin(skinInfo);\n            skinNode.parent = this.baseNode;\n            skinNode.zIndex = this.skinZIndex;\n            return skinNode;\n        }.bind(this));\n        this.poolMgr.setResetFunc(function(type,skinNode){\n            skinNode.active = false;\n        }.bind(this));\n\n        this.muzzleSkinNode = new cc.Node();\n        this.muzzleSkinNode.parent = this.baseNode;\n        this.muzzleSkinNode.zIndex = this.muzzleZIndex;\n        this.muzzleSkinNode.active = false;\n\n        this.muzzlePoolMgr = new PoolMgr();\n        this.muzzlePoolMgr.setBuildFunc(function(type,skinInfo){\n            var skinNode = cc.skinMgr.getSkin(skinInfo);\n            skinNode.parent = this.muzzleSkinNode;\n            return skinNode;\n        }.bind(this));\n        this.muzzlePoolMgr.setResetFunc(function(type,skinNode){\n            skinNode.active = false;\n        }.bind(this));\n\n        this.stateNode = new cc.Node();\n        this.stateLabel = this.stateNode.addComponent(cc.Label);\n        this.stateLabel.string = \"\";\n        this.stateNode.parent = this;\n        this.stateNode.zIndex = this.stateZIndex;\n    },\n    touchendTower(event){\n        cc.globalEvent.emit(\"Game:operateTower\",this);\n    },\n    touchstartTower(event){\n        \n    },\n    initGameData(){\n        this._super();\n        this.gameData.operateTime = 0;\n        this.gameData.operateTotalTime = 0;\n    },\n    showMuzzle(value){\n        this.muzzleSkinNode.active = value;\n    },\n    canWork(){\n        return this.gameData.state == cc.entityState.working;\n    },\n    toWork(){\n        this.enableCollider(true);\n        this.stateNode.active = false;\n        this.stateLabel.string = \"\";\n        this.gameData.operateTime = 0;\n        this.gameData.operateTotalTime = 0;\n    },\n    unWork(){\n        this.enableCollider(false);\n    },\n    logicUpdate(dt){\n        if(!this.canWork()){\n            if(this.gameData.operateTotalTime>0){\n                this.stateNode.active = true;\n                this.gameData.operateTime+=dt;\n                var txt = this.gameData.state + \n                Math.floor(this.gameData.operateTime);\n                if(txt != this.stateLabel.string){\n                    this.stateLabel.string = txt;\n                }\n            }\n\n            if(this.gameData.operateTime>=this.gameData.operateTotalTime){\n                switch(this.gameData.state){\n                    case cc.entityState.building:\n                        this.setState(cc.entityState.working);\n                    break;\n                    case cc.entityState.destroying:\n                        cc.entityMgr.clearEntity(this);\n                        cc.entityMgr.createEntity(\n                            \"EntityFloor\",\n                            this.x,\n                            this.y,\n                            this.placeFloorIdx);\n                    break;\n                    case cc.entityState.upleveling:\n                        cc.entityMgr.clearEntity(this);\n                        cc.entityMgr.createEntity(this.entityType,\n                            this.x,\n                            this.y,\n                            this.propValue.nextLevelIdx,\n                            this.placeFloorIdx);\n                    break;\n                }\n            }\n            return false;\n        }\n        return true;\n    },\n    hasNextLevel(){\n        if(this.propValue.nextLevelIdx==-1||\n           this.propValue.nextLevelIdx == undefined){\n            return false;\n        }\n        return true;\n    },\n    setState(state){\n        this._super(state);\n        if(this.gameData.state != cc.entityState.working){\n\n            switch(this.gameData.state){\n                case cc.entityState.building:\n                this.unWork();\n                this.gameData.operateTotalTime=this.propValue.buildTime;\n                break;\n                case cc.entityState.destroying:\n                this.unWork();\n                this.gameData.operateTotalTime=this.propValue.destroyTime;\n                break;\n                case cc.entityState.upleveling:\n                if(!this.hasNextLevel()){\n                    cc.utils.tip(\"can not uplevel the tower,now is top level\");\n                    this.setState(cc.entityState.working);\n                    break;\n                }\n                this.unWork();\n                this.gameData.operateTotalTime=this.propValue.uplevelTime;\n                break;\n            }\n\n        }else if(this.gameData.preState != cc.entityState.working){\n            this.toWork();\n        }\n    },\n    initEntity(idx,floorIdx){\n        this._super();\n\n        if(cc.resMgr.curSceneName != 'editor'){\n            this.baseNode.on('touchend',this.touchendTower,this);\n            this.baseNode.on('touchstart',this.touchstartTower,this);\n        }\n\n        this.myType = \"tower\";\n        this.myIdx = idx;\n        this.placeFloorIdx = floorIdx;\n        this.updateProperty();\n\n        if(cc.resMgr.curSceneName == 'editor'){\n            this.setState(cc.entityState.working);\n        }else{\n            if(this.propValue.level==1){\n                this.setState(cc.entityState.building);\n            }else{\n                this.setState(cc.entityState.working);\n            }\n        }\n    },\n    unInitEntity(){\n        this._super();\n        if(cc.resMgr.curSceneName != 'editor'){\n            this.baseNode.off('touchend',this.touchendTower,this);\n            this.baseNode.off('touchstart',this.touchstartTower,this);\n        }\n    },\n    _onPreDestroy(){\n        this._super();\n    },\n    updateProperty(property){\n        if(!this._super(property)){\n            return false;\n        }\n\n        //--------------------------------\n        //reset all\n        //--------------------------------\n        this.muzzleSkinNode.active = false;\n\n        this.poolMgr.resetAll();\n        this.muzzlePoolMgr.resetAll();\n        for(var key in this.propValue.skinArr){\n            var skinInfo = this.propValue.skinArr[key];\n            var skinNode = this.poolMgr.get(skinInfo.name,skinInfo);\n            skinNode.active = true;\n            skinNode.updateInfo(skinInfo);\n        }\n        for(var key in this.propValue.muzzleSkinArr){\n            var skinInfo = this.propValue.muzzleSkinArr[key];\n            var skinNode = this.muzzlePoolMgr.get(skinInfo.name,skinInfo);\n            skinNode.active = true;\n            skinNode.updateInfo(skinInfo);\n        }\n        return true;\n    },\n})"]}