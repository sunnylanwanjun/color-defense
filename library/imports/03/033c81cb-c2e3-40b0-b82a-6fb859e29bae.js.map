{"version":3,"sources":["../../../../assets/scripts/assets/scripts/ResMgr.js"],"names":["nohandle","cc","Class","ctor","init","resName","resConfig","commonRes","scenePreloadRes","sceneRes","resCache","res_UUID_To_RefCount_Map","curSceneName","undefined","unloadSceneRes","sceneName","sceneResMap","log","resNameVal","unloadRes","loadTempRes","onFinished","resTypeOrIsRawUrl","resData","resObj","loadedCallback","err","assets","bind","loadRes","error","refCount","assert","resDeps","key","resUUID","loader","release","releaseKey","updateDepsUUIDCount","resConfigVal","resType","isRawUrl","warn","RawAsset","_uuid","getDependsRecursively","_getResUuid","load","loadCommon","onProgress","loadedNum","totalNum","length","loadedResItem","loadedResName","resKey","loadScene","preloadResList","preSceneName","director","preloadScene","sceneAssets","info","_getSceneUuid","dependAssets","uuid","getRes","writeEditorRes","url","content","sys","isNative","platform","WIN32","MACOS","editorConfig","resMgr","jsb","fileUtils","writeStringToFile","workPath","utils","tip"],"mappings":"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","file":"ResMgr.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["function nohandle(){\n\n}\n\ncc.Class({\n    ctor(){\n        /*\n        设计思想：\n        进游戏时，先加载CommonRes，公共资源，该资源永远不会释放，资源引用计数永远大于0\n        加载场景的时候，先预加载必须资源，如果必须资源与公共资源的某个SpritFrame相同，那么\n        该SpriteFrame和该SpriteFrame所在的Texture的引用计数都会加1，有两张表，一个是resCache\n        一个是res_UUID_To_RefCount_Map，resCache是用来记录由外部使用的资源对象的引用计数，\n        当场景切换完毕后，旧场景所引用的资源引用计数都会减1，当然由于是场景切换完毕后，所以新场景\n        如果引用了旧场景的资源，那么被引用的资源引用计数会先加1，所以后来的减1不会使用该资源的引用计数\n        变成0，那么res_UUID_To_RefCount_Map的作用是什么呢，有了resCache为什么还要有res_UUID_To_RefCount_Map，因为一个由resCache标记为可删除的资源，是不是就可以完全从缓存\n        中删除了，不是的，因为两个看似完全不相关的资源，有可能A中引用了B中的所依赖的一张小图，特别是\n        做游戏特效的时候，就会出现这种问题，这时就必须从更细的粒度去解决这个问题，把resCache中标记为\n        可删除的资源的所有依赖资源都取出来，然后挨个判断他们的引用计数是否也为0，如果为0，那么表示该“”“子资源”是可以删除的，否则就不能删除。\n        所以使用的时候，就是一个场景如果要使用某个资源，要么预加载，然后使用getRes进行获取，\n        要么临时加载，使用loadTempRes进行获取，同个场景，多个地方引用同个资源，引用计数不用加1，\n        因为我们是以切换场景，来启动资源删除的。如果同个场景不同地方引用同个资源也将引用计数加1，\n        那么释放的时候，就要手动调用unloadRes了，这样做很麻烦，而且一旦忘记添加，该资源就永远不会\n        删除了，因为该资源的引用计数永远都大于0了。\n        对于持久化的资源，就不要使用loadTempRes了，既然要持久化，那不能切换场景的时候，进行资源删除，\n        所以不能让sceneRes记录该资源，那么方法就是直接使用loadRes进行资源加载，使用unloadRes卸载资源，绕过sceneRes的记录。\n        */\n    },\n    init(resName,resConfig,commonRes,scenePreloadRes){\n        this.resName = resName;\n        this.resConfig = resConfig;\n        this.commonRes = commonRes;\n        //场景预加载资源\n        this.scenePreloadRes = scenePreloadRes;\n\n        //场景已加载资源记录，切换场景时释放资源\n        this.sceneRes = {\n\n        }\n        //这个缓存是提供给游戏应用层使用的资源对象\n        this.resCache = {\n            //[this.resName.xx]:{resObj:xxobj,refCount:0},\n        }\n        //这个是用来作依赖删除记录的\n        this.res_UUID_To_RefCount_Map = {\n            //[uuid]:0, 其中0是资源对应引用计数\n        }\n        this.curSceneName = undefined;\n    },\n    unloadSceneRes(sceneName){\n        if(!sceneName){\n            return;\n        }\n        var sceneResMap = this.sceneRes[sceneName];\n        if(!sceneResMap){\n            cc.log(sceneName,\"has not load any res\");\n            return;\n        }\n        for(var resNameVal in sceneResMap){\n            if(resNameVal){\n                this.unloadRes(resNameVal);\n            }\n        }\n        delete this.sceneRes[sceneName];\n    },\n    //用来加载特效，图标，等，切换场景后立即释放的资源 \n    loadTempRes(resNameVal,onFinished,resTypeOrIsRawUrl){\n\n        onFinished = onFinished || nohandle;\n\n        //确保该场景只加载过一次该资源，让临时资源的引用计数不会超过1\n        if(this.sceneRes[this.curSceneName][resNameVal]){\n            var resData = this.resCache[resNameVal];\n            onFinished(undefined,resData.resObj);\n            return;\n        }\n        var loadedCallback = function(err,assets,resNameVal){\n            if(!err){        \n                this.sceneRes[this.curSceneName][resNameVal]=true;\n            }\n            onFinished(err,assets);\n        }.bind(this);\n        this.loadRes(resNameVal,loadedCallback,resTypeOrIsRawUrl);\n    },\n    //立即释放资源，一般情况下，由切换场景时，自动调用\n    //如果资源是持久资源，不由切换场景控制，那么可由外部调用，自行控制资源生命周期\n    unloadRes(resNameVal){\n        var resData = this.resCache[resNameVal];\n        if(!resData){\n            cc.error(\"ResMgr:unloadRes\",resNameVal,\"not exits\");\n            return;\n        }\n        resData.refCount--;\n        cc.assert(resData.refCount>=0,\"ResMgr:unloadRes\",resNameVal,\"refCount < 0\");\n        if(resData.refCount<=0){\n            var resDeps = resData.resDeps;\n            if(resDeps){\n                cc.log(\"ResMgr:unloadRes begin\",resNameVal,\"------------\");\n                for(var key in resDeps){\n                    var resUUID = resDeps[key];\n                    this.res_UUID_To_RefCount_Map[resUUID]--;\n                    cc.assert(resData.refCount>=0,\"ResMgr:unloadRes\",resUUID,\"uuid refCount < 0\");\n                    if(this.res_UUID_To_RefCount_Map[resUUID]<=0){\n                        //cc.log(\"ResMgr:unloadRes deps\",resUUID);\n                        cc.loader.release(resUUID);\n                        delete this.res_UUID_To_RefCount_Map[resUUID];\n                    }\n                }\n                //cc.log(\"ResMgr:unloadRes end\",resNameVal,\"------------\");\n            }else{\n                //cc.log(\"ResMgr:unloadRes release by releaseKey\",resNameVal,\"\");\n                cc.loader.release(resData.releaseKey);\n            }\n            delete this.resCache[resNameVal];\n        }\n        //cc.log(\"-------------------------------\");\n        //cc.log(\"resCache is\",this.resCache);\n        //cc.log(\"res_UUID_To_RefCount_Map is\",this.res_UUID_To_RefCount_Map);\n        //cc.log(\"-------------------------------\");\n    },\n    updateDepsUUIDCount(resDeps){\n        for(var key in resDeps){\n            var resUUID = resDeps[key];\n            this.res_UUID_To_RefCount_Map[resUUID] = this.res_UUID_To_RefCount_Map[resUUID] || 0\n            this.res_UUID_To_RefCount_Map[resUUID]++;\n        }\n    },\n    //加载资源，如果缓存有，只接从缓存中取，但引用计数会加1\n    //因为不同的场景有可能共享资源，我们会等到新的场景加载完后，再去释放旧场景\n    //的资源，那么此时只释放引用计数为0的资源，就可以达到目的了\n    loadRes(resNameVal,onFinished,resTypeOrIsRawUrl){\n\n        onFinished = onFinished || nohandle;\n\n        var resData = this.resCache[resNameVal];\n        if(resData){\n            resData.refCount++;\n            cc.log(\"ResMgr:loadRes from cache\",resNameVal,\"count\",resData.refCount);\n            onFinished(undefined,resData.resObj,resNameVal);\n            return;\n        }\n\n        var resConfigVal = this.resConfig[resNameVal];\n        var resType = undefined;\n        var isRawUrl = false;\n        if(typeof resTypeOrIsRawUrl === \"boolean\"){\n            isRawUrl = resTypeOrIsRawUrl;\n        }else if(resTypeOrIsRawUrl){\n            resType = resTypeOrIsRawUrl;\n        }\n\n        if(resConfigVal){\n            if(resConfigVal.resType !== undefined){\n                resType = resConfigVal.resType;\n            }\n            if(resConfigVal.isRawUrl !== undefined){\n                isRawUrl = resConfigVal.isRawUrl;\n            }     \n        }\n\n        var loadedCallback = function(err,assets){\n            if (err) {\n                cc.warn(\"ResMgr:loadRes\",resNameVal,\"failure\",err);\n                onFinished(err,undefined,resNameVal);\n                return;\n            }\n\n            cc.log(\"ResMgr:loadRes succeess\",resNameVal);\n\n            //记录引用计数\n            var resDeps = undefined;\n            //如果不是RawAsset对象，则该资源不存在依赖资源，删除的时候\n            //直接把自己删了就可以了，而且别的资源也不可能引用到该资源。\n            var releaseKey = undefined;\n            if(assets instanceof cc.RawAsset && assets._uuid){\n                resDeps = cc.loader.getDependsRecursively(assets);\n                this.updateDepsUUIDCount(resDeps);\n            }\n\n            if(!resDeps){\n                if(isRawUrl){\n                    releaseKey = resNameVal;\n                }else{\n                    releaseKey = cc.loader._getResUuid(resNameVal, resType);\n                }\n            }\n\n            //存储资源对象\n            this.resCache[resNameVal]={resObj:assets,refCount:1,resDeps:resDeps,releaseKey:releaseKey};\n            onFinished(undefined,assets,resNameVal);\n        }.bind(this);\n\n        cc.log(\"ResMgr:loadRes,url:\",resNameVal);\n        if(resType){\n            cc.loader.loadRes(resNameVal,resType,loadedCallback);\n        }else{\n            if(isRawUrl){\n                cc.loader.load(resNameVal,loadedCallback);\n            }else{\n                cc.loader.loadRes(resNameVal,loadedCallback);\n            }\n        }\n    },\n    loadCommon(onFinished,onProgress){\n\n        onFinished = onFinished || nohandle;\n        onProgress = onProgress || nohandle;\n\n        var loadedNum = 0;\n        var totalNum = this.commonRes.length;\n        var loadedResItem = function(err,assets,loadedResName){\n            if(err){\n                cc.log(\"ResMgr:loadCommon\",loadedResName,\"failure\");\n                onProgress(err,loadedResName);\n                return;\n            }\n            cc.log(\"ResMgr:loadCommon\",loadedResName,\"finished\");\n            loadedNum++;\n            onProgress(undefined,loadedResName,loadedNum,totalNum);\n            if(loadedNum==totalNum){\n                onFinished();\n            }\n        }.bind(this);\n\n        for(var resKey in this.commonRes){\n            this.loadRes(this.commonRes[resKey],loadedResItem);\n        }\n    },\n    loadScene(sceneName,onFinished,onProgress){\n\n        onFinished = onFinished || nohandle;\n        onProgress = onProgress || nohandle;\n        this.sceneRes[sceneName] = this.sceneRes[sceneName] || {};\n\n        var preloadResList = this.scenePreloadRes[sceneName]||[];\n        var loadedNum = 0;\n        var totalNum = preloadResList.length+1;\n        var loadedResItem = function(err,assets,loadedResName){\n            if(err){\n                cc.log(\"ResMgr:loadScene\",loadedResName,\"failure\");\n                onProgress(err,loadedResName);\n                return;\n            }\n            cc.log(\"ResMgr:loadScene\",loadedResName,\"finished\");\n            loadedNum++;\n            onProgress(undefined,loadedResName,loadedNum,totalNum);\n            this.sceneRes[sceneName][loadedResName]=true;\n            if(loadedNum==totalNum){\n                var preSceneName = this.curSceneName\n                this.curSceneName = sceneName;\n                onFinished();\n                this.unloadSceneRes(preSceneName);\n            }\n        }.bind(this);\n        \n        for(var resKey in preloadResList){\n            this.loadRes(preloadResList[resKey],loadedResItem);\n        }\n\n        cc.director.preloadScene(sceneName, function(err,sceneAssets) {\n            if(!err){\n                var info = cc.director._getSceneUuid(sceneName);\n                var dependAssets = cc.loader.getDependsRecursively(info.uuid);\n\n                //存储资源对象\n                this.updateDepsUUIDCount(dependAssets);\n                this.resCache[sceneName]={resObj:sceneAssets,\n                                          refCount:1,\n                                          resDeps:dependAssets};\n            }\n            loadedResItem(err,sceneAssets,sceneName);\n        }.bind(this));\n    },\n    getRes(resName){\n        var resData =  this.resCache[resName];\n        if(!resData)\n            return undefined;\n        return resData.resObj;\n    },\n    writeEditorRes(url,content){\n        if(cc.sys.isNative&&\n        (cc.sys.platform == cc.sys.WIN32||cc.sys.platform == cc.sys.MACOS)\n        ){\n            this.editorConfig = this.editorConfig || cc.resMgr.getRes(cc.resName.editorConfig);\n            jsb.fileUtils.writeStringToFile(content,this.editorConfig.workPath+url);\n            cc.utils.tip(\"write \"+url+\" success\");\n        }else{\n            cc.warn(\"ResMgr:writeEditorRes failure,platform id:\",cc.sys.platform);\n        }\n        cc.log(\"---------------------------\");\n        cc.log(\"ResMgr:writeEditorRes path\",url);\n        cc.log(\"ResMgr:writeEditorRes json\",content);\n        cc.log(\"---------------------------\");\n    }\n})"]}